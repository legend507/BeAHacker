../Mirai-Source-Code/
├── dlr                                 # ?
│   ├── build.sh
│   ├── main.c
│   └── release
│       ├── dlr.arm
│       ├── dlr.arm7
│       ├── dlr.m68k
│       ├── dlr.mips
│       ├── dlr.mpsl
│       ├── dlr.ppc
│       ├── dlr.sh4
│       └── dlr.spc
├── ForumPost.md
├── ForumPost.txt
├── LICENSE.md
├── loader                                  # some downloader, don't know what this is for
│   ├── bins
│   │   ├── dlr.arm
│   │   ├── dlr.arm7
│   │   ├── dlr.m68k
│   │   ├── dlr.mips
│   │   ├── dlr.mpsl
│   │   ├── dlr.ppc
│   │   ├── dlr.sh4
│   │   ├── dlr.spc
│   │   └── dlr.x86
│   ├── build.debug.sh
│   ├── build.sh
│   └── src
│       ├── binary.c
│       ├── connection.c
│       ├── headers
│       │   ├── binary.h
│       │   ├── connection.h
│       │   ├── includes.h
│       │   ├── server.h
│       │   ├── telnet_info.h
│       │   └── util.h
│       ├── main.c                          # this main read the vulnerable device info, and call server_queue_telnet on those info
│       ├── server.c                        # call server_telnet_probe func, to login the vulnerable devices, and use downloader or wget or TFTP to download 
│       ├── telnet_info.c
│       └── util.c
├── mirai                                   # mirai source code
│   ├── bot                                 # bot source code, to control each bot
│   │   ├── attack_app.c
│   │   ├── attack.c                        # receives attack from C&C
│   │   ├── attack_gre.c
│   │   ├── attack.h
│   │   ├── attack_tcp.c
│   │   ├── attack_udp.c
│   │   ├── checksum.c
│   │   ├── checksum.h
│   │   ├── includes.h
│   │   ├── killer.c
│   │   ├── killer.h
│   │   ├── main.c
│   │   ├── protocol.h
│   │   ├── rand.c
│   │   ├── rand.h
│   │   ├── resolv.c
│   │   ├── resolv.h
│   │   ├── scanner.c                   # scan for vulnerable devices
│   │   ├── scanner.h
│   │   ├── table.c
│   │   ├── table.h
│   │   ├── util.c
│   │   └── util.h
│   ├── build.sh
│   ├── cnc                             # command and control server source code, written in Golang; C&C controls all bots 
│   │   ├── admin.go
│   │   ├── api.go
│   │   ├── attack.go
│   │   ├── bot.go
│   │   ├── clientList.go
│   │   ├── constants.go
│   │   ├── database.go
│   │   └── main.go                         # main function, 
│   ├── prompt.txt
│   └── tools
│       ├── badbot.c
│       ├── enc.c
│       ├── nogdb.c
│       ├── scanListen.go               # receive vulnerable devices info from bots
│       ├── single_load.c
│       └── wget.c
├── README.md
└── scripts                             # script & command for config
    ├── cross-compile.sh
    ├── db.sql
    └── images
        └── BVc7qJs.png

12 directories, 79 files


How to process the analysis, 
- try to figure out the sequence of infection
    1. sequence of attack, I'm assuming C&C is firstly established.
    2. after C&C, who does the scan work? (my understanding is bots do scan work)
    3. when a vulnerable devices is found, my understanding is the bot upload the info to server,
    4. upon receiving the info, server (or loader?) tries to login on the vulnerable device, and try wget, TFTP, downloader to send the bot to the devices

- try to figure out how attack command are communicated to the bots,
- try to understand how bots disguise themselves on the vulnerable devices
- try to learn how dictionary scan is done (by bot?)